---
--- Initial query displays start and endTime and calculates the gap between the end and the next start
---
WITH DeviceData AS 
(
    SELECT 
        deviceId,
        DATEADD(millisecond, [startTime], '1970-01-01T00:00:00Z') as [start],
        DATEADD(millisecond, [endTime], '1970-01-01T00:00:00Z') as [end],
        LAG(endTime) OVER (PARTITION BY event.deviceId LIMIT DURATION(minute,60)) as previousEnd
    FROM
        TestDeviceData  
    TIMESTAMP BY 
        DATEADD(millisecond, [endTime], '1970-01-01T00:00:00Z')
)

SELECT 
    deviceId,
    [start],
    [end],
    DATEDIFF(second, DATEADD(millisecond, [previousEnd], '1970-01-01T00:00:00Z'),[start]) AS previousEndMinusStartSeconds
into
    Output
FROM
    DeviceData

---
--- Uses the tumbling windows and produces an output I understand....
---
SELECT 
    deviceId,
    MIN(DATEADD(millisecond, [endTime], '1970-01-01T00:00:00Z')) AS windowStart,
    System.Timestamp AS windowEnd,
    DATEDIFF(second, MIN(DATEADD(millisecond, [endTime], '1970-01-01T00:00:00Z')), System.Timestamp) AS durationSeconds
INTO
   TumblingWindows
FROM 
    TestDeviceData 
TIMESTAMP BY 
    DATEADD(millisecond, [endTime], '1970-01-01T00:00:00Z')
GROUP BY 
   deviceId, TUMBLINGWINDOW(minute,15)


---
--- Uses the new session windows and produces an output I don't understand
---
SELECT 
    deviceId,
    MIN(DATEADD(millisecond, [endTime], '1970-01-01T00:00:00Z')) AS windowStart,
    System.Timestamp AS windowEnd,
    DATEDIFF(second, MIN(DATEADD(millisecond, [endTime], '1970-01-01T00:00:00Z')), System.Timestamp) AS durationSeconds
INTO
   SessionWindows
FROM 
   TestDeviceData 
TIMESTAMP BY 
   DATEADD(millisecond, [endTime], '1970-01-01T00:00:00Z')
GROUP BY 
   deviceId, SESSIONWINDOW(minute, 3, 15) OVER (PARTITION BY deviceId)




